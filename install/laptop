#!/usr/bin/env bash

# Adpated from thoughtbot's laptop script.
# https://github.com/joshukraine/laptop

laptop_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\n[LAPTOP] $fmt\n" "$@"
}

# shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

if [ ! -d "$HOME/bin/" ]; then
  mkdir "$HOME/bin"
fi

# Determine Homebrew prefix
arch="$(uname -m)"
if [ "$arch" = "arm64" ]; then
  HOMEBREW_PREFIX="/opt/homebrew"
else
  HOMEBREW_PREFIX="/usr/local"
fi

gem_install_or_update() {
  if gem list "$1" --installed > /dev/null; then
    gem update "$@"
  else
    gem install --no-document "$@" 
  fi
}

if ! command -v brew >/dev/null; then
  laptop_echo "Installing Homebrew ..."
    /bin/bash -c \
      "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

    eval $($HOMEBREW_PREFIX/bin/brew shellenv)

    export PATH="$HOMEBREW_PREFIX/bin:$PATH"
fi

if brew list | grep -Fq brew-cask; then
  laptop_echo "Uninstalling old Homebrew-Cask ..."
  brew uninstall --force brew-cask
fi

laptop_echo "Updating Homebrew formulae ..."
brew update
brew bundle -v --global

###################################
# TODO: Configure Brew ruby instead of MacOS version

if [ -d "/usr/local/opt/ruby/bin" ]; then
  export PATH=/usr/local/opt/ruby/bin:$PATH
  export PATH=`gem environment gemdir`/bin:$PATH
fi

if [ -d "/opt/homebrew/opt/ruby/bin" ]; then
  export PATH=/opt/homebrew/opt/ruby/bin:$PATH
  export PATH=`gem environment gemdir`/bin:$PATH
fi

###################################
laptop_echo "Configuring Ruby Gems ..."
gem update --system
gem_install_or_update 'bundler'
gem_install_or_update 'fastlane'
gem_install_or_update 'cocoapods'
# number_of_cores=$(sysctl -n hw.ncpu)
# bundle config --global jobs $((number_of_cores - 1))
